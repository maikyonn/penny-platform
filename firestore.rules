rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {
    function isSignedIn() { 
      return request.auth != null; 
    }

    function isOrgMember(orgId) {
      return exists(/databases/$(db)/documents/organizations/$(orgId)/members/$(request.auth.uid));
    }

    function hasRole(orgId, roles) {
      return get(/databases/$(db)/documents/organizations/$(orgId)/members/$(request.auth.uid)).data.role in roles;
    }

    // User profiles
    match /profiles/{uid} {
      allow read: if isSignedIn() && (request.auth.uid == uid || isOrgMember(resource.data.currentOrgId));
      allow write: if request.auth.uid == uid;
    }

    // Gmail accounts (OAuth tokens)
    match /gmailAccounts/{uid} {
      allow read, write: if request.auth.uid == uid;
    }

    // Global influencer catalog
    match /influencers/{influencerId} {
      allow read: if true; // Public catalog
      allow write: if false; // Only backend writers (Functions/Run SA)

      match /profiles/{doc} { 
        allow read: if true; 
        allow write: if false; 
      }

      match /statsHistory/{date} { 
        allow read: if true; 
        allow write: if false; 
      }
    }

    // Organizations and nested data
    match /organizations/{orgId} {
      allow read: if isSignedIn() && isOrgMember(orgId);
      allow write: if isSignedIn() && hasRole(orgId, ['owner','admin']);

      // Org members
      match /members/{uid} {
        allow read: if isSignedIn() && isOrgMember(orgId);
        allow write: if isSignedIn() && (request.auth.uid == uid || hasRole(orgId, ['owner','admin']));
      }

      // Org invites
      match /invites/{inviteId} {
        allow read, write: if isSignedIn() && hasRole(orgId, ['owner','admin']);
      }

      // Subscription
      match /subscription {
        allow read, write: if isSignedIn() && hasRole(orgId, ['owner','admin']);
      }

      // Usage logs
      match /usageLogs/{logId} {
        allow read, write: if isSignedIn() && isOrgMember(orgId);
      }

      // Campaigns
      match /campaigns/{campaignId} {
        allow read, write: if isSignedIn() && isOrgMember(orgId);

        // Campaign targets
        match /targets/{doc} {
          allow read, write: if isSignedIn() && isOrgMember(orgId);
        }

        // Campaign assets
        match /assets/{assetId} {
          allow read, write: if isSignedIn() && isOrgMember(orgId);
        }

        // Campaign metrics
        match /metrics/{date} {
          allow read, write: if isSignedIn() && isOrgMember(orgId);
        }

        // Campaign influencers (pivot)
        match /influencers/{ciId} {
          allow read, write: if isSignedIn() && isOrgMember(orgId);

          // Outreach threads
          match /threads/{threadId} {
            allow read, write: if isSignedIn() && isOrgMember(orgId);

            // Outreach messages
            match /messages/{messageId} {
              allow read, write: if isSignedIn() && isOrgMember(orgId);
            }
          }
        }

        // AI recommendations
        match /aiRecommendations/{recId} {
          allow read, write: if isSignedIn() && isOrgMember(orgId);
        }
      }

      // Chat sessions
      match /chatSessions/{sessionId} {
        allow read, write: if isSignedIn() && isOrgMember(orgId);

        // Chat messages
        match /messages/{msgId} {
          allow read, write: if isSignedIn() && isOrgMember(orgId);
        }
      }

      // Workflow runs
      match /workflowRuns/{runId} {
        allow read, write: if isSignedIn() && isOrgMember(orgId);
      }
    }
  }
}

